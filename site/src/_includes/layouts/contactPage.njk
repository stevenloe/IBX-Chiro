{% extends "layouts/base.njk" %}
{% block customstyles %}
<style>
  body {
    background: url({{ bodyImg }});
    background-position: {{ bodyImgPosition }};
  }

  .hero {
    background: {{ heroBgColor }} url({{ heroImg }}); 
    }

  .modal {
    z-index: 3000;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0, 0.6);
    display:block;
    overflow:auto;
  }

  .modal-content {
    position: relative;
    margin: 3em;
  }

  form {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 1em;
    padding:2em;
    border: solid 1px #ccc;
    background:#fff;

  }
  form>header {
    grid-column: 1 / -1;
    display:flex;
    align-items: center;
    justify-content: space-between;
  }

  input[type=text], input[type=email], textarea {
    font-family: 'Avenir LT Std', montserrat, sans-serif;
    border: solid 1px #ccc;
    padding:0.5em;
    font-size:1.3em;
    width:100%;
  }

  form>* {
    grid-column: 1 /-1;
  }

  form>.first {
    grid-column: 1;
  }

  form>.last {
    grid-column: 2;
  }

  form>.title {
    font-size: 1.2em;
    margin-bottom:-1em;
  }

  form>p{
    margin:0;
    padding:0
  }

  p.center {
    text-align: center;
    background:#ddd;
  }

  .modal.closed {
    display:none;
  }

  .no-scroll {
    overflow: hidden;
  }

  .hidden{
    display:none 
  }


</style>
{% endblock %}

{% block hero %}
  <div class="hero center-heading">
    {% include "components/owner.njk" %}

    <div class="cta text-to-top">
      <h1>{{ heroText }}</h1>
    </div>
      
  </div>
{% endblock %}


{% block moreScript %}


<script>
const modal = document.querySelector(".modal");
const modalContent = document.querySelector(".modal-content");
const body = document.querySelector("body");

document.querySelector(".modal-open-button").addEventListener("click", openModal);
document.querySelector(".modal-close-button").addEventListener("click", closeModal);

modal.addEventListener("click", function(event) {
  if (event.currentTarget !== event.target) {
    return;
  }
  closeModal();
});

function openModal() {
  modal.classList.toggle("closed");
  modalContent.classList.toggle("closed");
  body.classList.toggle("no-scroll");
}

function closeModal() {
  modal.classList.toggle("closed");
  modalContent.classList.toggle("closed");
  body.classList.toggle("no-scroll");
}

const formElem = document.querySelector("form")

formElem.addEventListener('submit', (e) => {
  e.preventDefault();
  new FormData(formElem);

  fetch('/', {
    method: 'POST',
    headers: { "Content-Type": "application/x-www-form-urlencoded" },
    body: new URLSearchParams(formData).toString()
  }).then(() => console.log('Form successfully submitted')).catch((error) =>
    alert(error))
});

formElem.addEventListener('formdata', (e) => {
  console.log('formdata fired');
  e.preventDefault();

  // Get the form data from the event object
  let data = e.formData;
  for (var value of data.values()) {
    console.log("val", value);
  }
});


</script>

{% endblock %}